This is a debug message
This is info message
Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.3.1.Final}
HHH000206: hibernate.properties not found
Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
Building session factory using internal StandardServiceRegistryBuilder
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.3.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@dcc812
Adding type registration boolean -> org.hibernate.type.BooleanType@dcc812
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@dcc812
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1a14a4
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1544ae6
Adding type registration yes_no -> org.hibernate.type.YesNoType@1066c7d
Adding type registration byte -> org.hibernate.type.ByteType@3cd68
Adding type registration byte -> org.hibernate.type.ByteType@3cd68
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3cd68
Adding type registration character -> org.hibernate.type.CharacterType@c92293
Adding type registration char -> org.hibernate.type.CharacterType@c92293
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c92293
Adding type registration short -> org.hibernate.type.ShortType@33c17b
Adding type registration short -> org.hibernate.type.ShortType@33c17b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33c17b
Adding type registration integer -> org.hibernate.type.IntegerType@1de3d36
Adding type registration int -> org.hibernate.type.IntegerType@1de3d36
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1de3d36
Adding type registration long -> org.hibernate.type.LongType@326051
Adding type registration long -> org.hibernate.type.LongType@326051
Adding type registration java.lang.Long -> org.hibernate.type.LongType@326051
Adding type registration float -> org.hibernate.type.FloatType@18bd2ba
Adding type registration float -> org.hibernate.type.FloatType@18bd2ba
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18bd2ba
Adding type registration double -> org.hibernate.type.DoubleType@234a38
Adding type registration double -> org.hibernate.type.DoubleType@234a38
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@234a38
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c726ee
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c726ee
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@328d33
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@328d33
Adding type registration string -> org.hibernate.type.StringType@4f3b3a
Adding type registration java.lang.String -> org.hibernate.type.StringType@4f3b3a
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1526c05
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1312be2
Adding type registration url -> org.hibernate.type.UrlType@b7395e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@b7395e
Adding type registration Duration -> org.hibernate.type.DurationType@a40280
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@a40280
Adding type registration Instant -> org.hibernate.type.InstantType@1f8fa12
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1f8fa12
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c886c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7c886c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@116c6b3
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@116c6b3
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1941c2f
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1941c2f
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a15628
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a15628
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4204e2
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4204e2
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1b93fa8
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1b93fa8
Adding type registration date -> org.hibernate.type.DateType@17bea38
Adding type registration java.sql.Date -> org.hibernate.type.DateType@17bea38
Adding type registration time -> org.hibernate.type.TimeType@ad6665
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@ad6665
Adding type registration timestamp -> org.hibernate.type.TimestampType@1709512
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1709512
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1709512
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19a2c08
Adding type registration calendar -> org.hibernate.type.CalendarType@e92c5c
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e92c5c
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e92c5c
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f0da3
Adding type registration locale -> org.hibernate.type.LocaleType@4566f1
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4566f1
Adding type registration currency -> org.hibernate.type.CurrencyType@8c94da
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@8c94da
Adding type registration timezone -> org.hibernate.type.TimeZoneType@d9d86
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@d9d86
Adding type registration class -> org.hibernate.type.ClassType@1cb4f5f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1cb4f5f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f9738
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f9738
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1868a0
Adding type registration binary -> org.hibernate.type.BinaryType@1a21c64
Adding type registration byte[] -> org.hibernate.type.BinaryType@1a21c64
Adding type registration [B -> org.hibernate.type.BinaryType@1a21c64
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36a7db
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36a7db
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36a7db
Adding type registration row_version -> org.hibernate.type.RowVersionType@fdec90
Adding type registration image -> org.hibernate.type.ImageType@7776ab
Adding type registration characters -> org.hibernate.type.CharArrayType@11de2d6
Adding type registration char[] -> org.hibernate.type.CharArrayType@11de2d6
Adding type registration [C -> org.hibernate.type.CharArrayType@11de2d6
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@9710d9
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@9710d9
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@9710d9
Adding type registration text -> org.hibernate.type.TextType@3f0a22
Adding type registration ntext -> org.hibernate.type.NTextType@195bf68
Adding type registration blob -> org.hibernate.type.BlobType@14a6b8e
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@14a6b8e
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@149bca9
Adding type registration clob -> org.hibernate.type.ClobType@dffdc3
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@dffdc3
Adding type registration nclob -> org.hibernate.type.NClobType@148a0f9
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@148a0f9
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6c1270
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ee4f1b
Adding type registration serializable -> org.hibernate.type.SerializableType@17cf65c
Adding type registration object -> org.hibernate.type.ObjectType@11bfe23
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@11bfe23
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1529963
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a88b8c
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@295ec4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@db0db3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1270e0a
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@760689
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@41a47d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f59913
Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-mapping-3.0.dtd]
Performing JAXB binding of hbm.xml document : Origin(name=user.hbm.xml,type=RESOURCE)
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.hsqldb.jdbcDriver] at URL [jdbc:hsqldb:hsql://localhost/]
HHH10001001: Connection properties: {user=SA, password=}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : HSQL Database Engine
    version : 2.3.4
      major : 2
      minor : 3
Driver ->
       name : HSQL Database Engine Driver
    version : 2.3.4
      major : 2
      minor : 3
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a47fea] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@192212b]
Mapping class: com.java.hibercrud.User -> user_details
Mapped property: userId -> [emp_id]
Forcing column [emp_id] to be non-null as it is part of the primary key for table [user_details]
Mapped property: userName -> [user_name]
Mapped property: password -> [user_password]
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.HSQLDialect, java.class.path=E:\Java\eclipse\configuration\org.eclipse.osgi\473\0\.cp\lib\testng-remote.jar;D:\JP\hibercrud\target\test-classes;D:\JP\hibercrud\target\classes;E:\Java\eclipse\plugins\org.testng_6.14.2.r201802161450.jar;E:\Java\eclipse\plugins\com.beust.jcommander_1.72.0.jar;E:\Java\eclipse\plugins\org.apache-extras.beanshell.bsh_2.0.0.b6.jar;E:\Java\eclipse\plugins\org.yaml.snakeyaml_1.17.0.jar;C:\Users\ganesh\.m2\repository\junit\junit\3.8.1\junit-3.8.1.jar;C:\Users\ganesh\.m2\repository\org\apache\poi\poi-ooxml\3.17\poi-ooxml-3.17.jar;C:\Users\ganesh\.m2\repository\org\apache\poi\poi\3.17\poi-3.17.jar;C:\Users\ganesh\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\ganesh\.m2\repository\org\apache\commons\commons-collections4\4.1\commons-collections4-4.1.jar;C:\Users\ganesh\.m2\repository\org\apache\poi\poi-ooxml-schemas\3.17\poi-ooxml-schemas-3.17.jar;C:\Users\ganesh\.m2\repository\org\apache\xmlbeans\xmlbeans\2.6.0\xmlbeans-2.6.0.jar;C:\Users\ganesh\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\ganesh\.m2\repository\com\github\virtuald\curvesapi\1.04\curvesapi-1.04.jar;C:\Users\ganesh\.m2\repository\org\hibernate\hibernate-core\5.3.1.Final\hibernate-core-5.3.1.Final.jar;C:\Users\ganesh\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\ganesh\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\ganesh\.m2\repository\org\javassist\javassist\3.22.0-GA\javassist-3.22.0-GA.jar;C:\Users\ganesh\.m2\repository\net\bytebuddy\byte-buddy\1.8.12\byte-buddy-1.8.12.jar;C:\Users\ganesh\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\ganesh\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\ganesh\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\ganesh\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\ganesh\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\ganesh\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.3.Final\hibernate-commons-annotations-5.0.3.Final.jar;C:\Users\ganesh\.m2\repository\org\hsqldb\hsqldb\2.3.4\hsqldb-2.3.4.jar;C:\Users\ganesh\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=32, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 10, java.vm.specification.version=1.8, user.country=IN, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_121\bin, sun.java.command=org.testng.remote.RemoteTestNG -serport 51420 -protocol json -d D:\JP\hibercrud\test-output C:\Users\ganesh\AppData\Local\Temp\testng-eclipse-1162867847\testng-customsuite.xml, sun.cpu.endian=little, user.home=C:\Users\ganesh, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_121, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_121\lib\resources.jar;C:\Program Files\Java\jre1.8.0_121\lib\rt.jar;C:\Program Files\Java\jre1.8.0_121\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_121\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_121\lib\jce.jar;C:\Program Files\Java\jre1.8.0_121\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_121\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_121\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot Client Compiler, java.runtime.version=1.8.0_121-b13, user.name=ganesh, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_121\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:hsqldb:hsql://localhost/, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) Client VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=org.hsqldb.jdbcDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ganesh\AppData\Local\Temp\, java.version=1.8.0_121, user.dir=D:\JP\hibercrud, os.arch=x86, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1be7749, java.library.path=C:\Program Files\Java\jre1.8.0_121\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_121/bin/client;C:/Program Files/Java/jre1.8.0_121/bin;C:/Program Files/Java/jre1.8.0_121/lib/i386;C:\ProgramData\Oracle\Java\javapath;C:\oracle\product\10.2.0\client_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_121\bin;C:\Program Files\WIDCOMM\Bluetooth Software\;C:\Program Files\Java\jdk1.8.0_121\bin;C:\hsqldb-2.3.4\hsqldb\bin;C:\apache-maven-3.5.4\bin;E:\Java\eclipse;;., java.vm.info=mixed mode, sharing, java.vendor=Oracle Corporation, java.vm.version=25.121-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jre1.8.0_121\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1a47fea] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1093491]
Not known whether passed class name [com.java.hibercrud.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.java.hibercrud.User
Not known whether passed class name [com.java.hibercrud.User] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.java.hibercrud.User
Static SQL for entity: com.java.hibercrud.User
 Version select: select emp_id from user_details where emp_id =?
 Snapshot select: select user_.emp_id, user_.user_name as user_nam2_0_, user_.user_password as user_pas3_0_ from user_details user_ where user_.emp_id=?
 Insert 0: insert into user_details (user_name, user_password, emp_id) values (?, ?, ?)
 Update 0: update user_details set user_name=?, user_password=? where emp_id=?
 Delete 0: delete from user_details where emp_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10753c9]
Visiting attribute path : userName
Visiting attribute path : password
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.java.hibercrud.User)
    - Returns
       - EntityReturnImpl(entity=com.java.hibercrud.User, querySpaceUid=<gen:0>, path=com.java.hibercrud.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.java.hibercrud.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {emp_id1_0_0_}

Static select for entity com.java.hibercrud.User [NONE]: select user0_.emp_id as emp_id1_0_0_, user0_.user_name as user_nam2_0_0_, user0_.user_password as user_pas3_0_0_ from user_details user0_ where user0_.emp_id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c76fa1]
Visiting attribute path : userName
Visiting attribute path : password
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=com.java.hibercrud.User)
    - Returns
       - EntityReturnImpl(entity=com.java.hibercrud.User, querySpaceUid=<gen:0>, path=com.java.hibercrud.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.java.hibercrud.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {emp_id1_0_0_}

Static select for entity com.java.hibercrud.User [READ]: select user0_.emp_id as emp_id1_0_0_, user0_.user_name as user_nam2_0_0_, user0_.user_password as user_pas3_0_0_ from user_details user0_ where user0_.emp_id=?
Static select for action ACTION_MERGE on entity com.java.hibercrud.User: select user0_.emp_id as emp_id1_0_0_, user0_.user_name as user_nam2_0_0_, user0_.user_password as user_pas3_0_0_ from user_details user0_ where user0_.emp_id=?
Static select for action ACTION_REFRESH on entity com.java.hibercrud.User: select user0_.emp_id as emp_id1_0_0_, user0_.user_name as user_nam2_0_0_, user0_.user_password as user_pas3_0_0_ from user_details user0_ where user0_.emp_id=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f518a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : user_details
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d9214d
Registering SessionFactory: 8a96199f-313e-4fee-87da-0cd8c7c56954 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@373389
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: select generatedAlias0 from com.java.hibercrud.User as generatedAlias0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'java'
       |     |  |  \-[IDENT] Node: 'hibercrud'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

select << begin [level=1, statement=select]
FromClause{level=1} : com.java.hibercrud.User (generatedAlias0) -> user0_
Resolved : generatedAlias0 -> user0_.emp_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} user0_.emp_id ) ( FromClause{level=1} user_details user0_ ) )
Using FROM fragment [user_details user0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.emp_id as emp_id1_0_' {alias=generatedAlias0, className=com.java.hibercrud.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_name as user_nam2_0_, user0_.user_password as user_pas3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user_details user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user_details,tableAlias=user0_,origin=null,columns={,className=com.java.hibercrud.User}}

throwQueryException() : no errors
HQL: select generatedAlias0 from com.java.hibercrud.User as generatedAlias0
SQL: select user0_.emp_id as emp_id1_0_, user0_.user_name as user_nam2_0_, user0_.user_password as user_pas3_0_ from user_details user0_
throwQueryException() : no errors
select user0_.emp_id as emp_id1_0_, user0_.user_name as user_nam2_0_, user0_.user_password as user_pas3_0_ from user_details user0_
Result set row: 0
Result row: EntityKey[com.java.hibercrud.User#1]
Result set row: 1
Result row: EntityKey[com.java.hibercrud.User#2]
Resolving associations for [com.java.hibercrud.User#1]
Done materializing entity [com.java.hibercrud.User#1]
Resolving associations for [com.java.hibercrud.User#2]
Done materializing entity [com.java.hibercrud.User#2]
This is a debug message
This is info message
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
select user0_.emp_id as emp_id1_0_, user0_.user_name as user_nam2_0_, user0_.user_password as user_pas3_0_ from user_details user0_
Result set row: 0
Result row: EntityKey[com.java.hibercrud.User#1]
Result set row: 1
Result row: EntityKey[com.java.hibercrud.User#2]
Resolving associations for [com.java.hibercrud.User#1]
Done materializing entity [com.java.hibercrud.User#1]
Resolving associations for [com.java.hibercrud.User#2]
Done materializing entity [com.java.hibercrud.User#2]
This is a debug message
This is info message
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
select user0_.emp_id as emp_id1_0_, user0_.user_name as user_nam2_0_, user0_.user_password as user_pas3_0_ from user_details user0_
Result set row: 0
Result row: EntityKey[com.java.hibercrud.User#1]
Result set row: 1
Result row: EntityKey[com.java.hibercrud.User#2]
Resolving associations for [com.java.hibercrud.User#1]
Done materializing entity [com.java.hibercrud.User#1]
Resolving associations for [com.java.hibercrud.User#2]
Done materializing entity [com.java.hibercrud.User#2]
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
com.java.hibercrud.User{password=user123, userName=user, userId=2}
com.java.hibercrud.User{password=admin, userName=Admin, userId=1}
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
This is a debug message
This is info message
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin
Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
select user0_.emp_id as emp_id1_0_, user0_.user_name as user_nam2_0_, user0_.user_password as user_pas3_0_ from user_details user0_
Result set row: 0
Result row: EntityKey[com.java.hibercrud.User#1]
Result set row: 1
Result row: EntityKey[com.java.hibercrud.User#2]
Resolving associations for [com.java.hibercrud.User#1]
Done materializing entity [com.java.hibercrud.User#1]
Resolving associations for [com.java.hibercrud.User#2]
Done materializing entity [com.java.hibercrud.User#2]
This is a debug message
This is info message
This is a debug message
This is info message
This is a debug message
This is info message
